
#ifndef BOOTLOADER_H_
#define BOOTLOADER_H_

#include "stm32f1xx_hal.h"
#include <string.h>
/*****************************BOOTLOADER_MACROS*****************************************/
#define D_UART							&huart1
#define C_UART							&huart1
#define FLASH_SECTOR2_BASE_ADDRESS 		0x08008000
#define BL_RX_LEN						200

//Bootloader Commands
#define BL_GET_VER						0x51 // BootLoader Get Version
#define BL_GET_HELP						0x52 // Bootloader Get Help
#define BL_GET_CID						0x53 // Bootloader Get chip ID
#define BL_GET_RDP_STATUS				0x54 // Bootloader Reed Flash Protection Status
#define BL_GO_TO_ADDR					0x55 // Bootloader Go To address
#define BL_FLASH_ERASE					0x56 // Bootloader mass Erase or Sector Erase
#define BL_MEM_WRITE					0x57 // Bootloader memory Write
#define BL_EN_R_W_PROTECT				0x58 // BL Enable R/W Protection on different Sectors on Flash
#define BL_MEM_READ						0x59 // BL Read Data from Different Memories of MC
#define BL_READ_SECTOR_STATUS			0x5A // BL Read all the sector protection status
#define BL_DIS_R_W_PROTECT				0x5C // BL Disable R/W Protection on different Sectors on Flash
/*****************************EXTERN VARIABLES******************************************/
extern UART_HandleTypeDef huart1;
/*****************************GLOBAL VARIABLES******************************************/
uint8_t BL_rx_buffer[BL_RX_LEN];
/*****************************FUNCTION DECLARATION**************************************/
extern void printmsg(char *format,...);
void BootLoader_Jump_to_User_APP();
void BootLoader_UART_Read_Data();

//Bootloader Handle Commands Function Prototype


#endif /* BOOTLOADER_H_ */
