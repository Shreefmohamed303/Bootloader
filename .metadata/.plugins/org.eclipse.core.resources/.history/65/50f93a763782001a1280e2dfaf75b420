/*
 * Bootloader.c
 *
 *  Created on: Apr 19, 2020
 *      Author: LENOVO
 */
#include "Bootloader.h"

/*****************************FUNCTION DEFINITION**************************************/

void BootLoader_Jump_to_User_APP()
{
	// Pointer to Function to hold the Reset_Handler() of the User Application code
	void (*PF_APP_Reset_handler)(void);

	printmsg("BL_DEBUG_MSG:Bootloader_jump_to_User_Application\r\n");

	/* 1. Configure the MSP_Value of User application
	 *    by Reading the value of the base address of Sector 2
	 */
	uint32_t user_MSP_value=*(volatile uint32_t *)FLASH_SECTOR2_BASE_ADDRESS;
	printmsg("BL_DEBUG_MSG:User_MSP_Value : %#x\r\n",user_MSP_value);

	// This Function Comes with CEMSIS
	__set_MSP(user_MSP_value);

	/* 2. Fetching The Reset Handler address of The User Application
	 * 	  From The Location (FLASH_SECTOR2_BASE_ADDRESS+4)
	 * 	  as it's the second location of the Flash memory
	 */
	uint32_t resetHandler_address=*(volatile uint32_t*)(FLASH_SECTOR2_BASE_ADDRESS+4);

	PF_APP_Reset_handler=(void*)resetHandler_address;

	printmsg("BL_DEBUG_MSG:App_Reset_Handler_Address : %#x\r\n",PF_APP_Reset_handler);

	/* 3. Jump to Reset Handler of The User_Application */
	PF_APP_Reset_handler();
}


void BootLoader_UART_Read_Data()
{
	uint8_t BL_rcv_len=0;
	uint8_t BL_cmd_code=0;
	while(1)
	{
		memset(BL_rx_buffer,0,BL_RX_LEN);
		/* Here we will Read and Decode Command coming form the Host */

		// 1.Read only one Byte from the Host, which is "LENGTH_FIELD" of the command Packet
		HAL_UART_Receive(C_UART,BL_rx_buffer,1,HAL_MAX_DELAY);
		BL_rcv_len=BL_rx_buffer[0];

		// 2.Read The Rest of the command packet according to Length i got from the user
		HAL_UART_Receive(C_UART,&BL_rx_buffer[1],BL_rcv_len,HAL_MAX_DELAY);

		// 3.The second Byte of The Packet is the "COMMAND_CODE" of the command packet
		BL_cmd_code=BL_rx_buffer[1];

		// 4.Use Switch case to Decode The Command Code and Give The Right Response according to CMD
		switch(BL_cmd_code)
		{
			case:BL_
		}
	}
}
